<?php



namespace {{module-name}}\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Controllers;

use Apiato\Core\Exceptions\IncorrectIdException;
use Apiato\Core\Exceptions\InvalidTransformerException;
use {{module-name}}\{{section-name}}\{{container-name}}\Actions\Update{{model}}Action;
use {{module-name}}\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Requests\Update{{model}}Request;
use {{module-name}}\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Transformers\{{model}}Transformer;
use App\MagicPort\Ship\Exceptions\NotFoundException;
use App\MagicPort\Ship\Exceptions\UpdateResourceFailedException;
use App\MagicPort\Ship\Parents\Controllers\{{base-controller}};

class {{class-name}} extends {{base-controller}}
{
    /**
     * @param Update{{model}}Request $request
     * @return array
     * @throws InvalidTransformerException
     * @throws UpdateResourceFailedException
     * @throws IncorrectIdException
     * @throws NotFoundException
     */
    public function update{{model}}(Update{{model}}Request $request): array
    {
        ${{entity}} = app(Update{{model}}Action::class)->run($request);

        return $this->updated($this->transform(${{entity}}, {{model}}Transformer::class),
               alert: __('{{__module-name}}::{{__translation-name}}.updated'));
    }
}
