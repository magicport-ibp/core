<?php



namespace {{module-name}}\{{section-name}}\{{container-name}}\Tests\Unit;

use {{module-name}}\{{section-name}}\{{container-name}}\Events\{{event}};
use {{module-name}}\{{section-name}}\{{container-name}}\Tasks\Create{{model}}Task;
use {{module-name}}\{{section-name}}\{{container-name}}\Tests\TestCase;
use App\MagicPort\Ship\Exceptions\CreateResourceFailedException;
use Illuminate\Support\Facades\Event;

/**
 * Class {{class-name}}.
 *
 * @group {{_container-name}}
 * @group unit
 */
class {{class-name}} extends TestCase
{
    public function testCreate{{model}}(): void
    {
        Event::fake();
        $data = [];

        ${{_model}} = app(Create{{model}}Task::class)->run($data);

        $this->assertModelExists(${{_model}});
        Event::assertDispatched({{event}}::class);
    }

    // TODO TEST
//    public function testCreate{{model}}WithInvalidData(): void
//    {
//        $this->expectException(CreateResourceFailedException::class);
//
//        $data = [
//            // put some invalid data here
//            // 'invalid' => 'data',
//        ];
//
//        app(Create{{model}}Task::class)->run($data);
//    }
}
